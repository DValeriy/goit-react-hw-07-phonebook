{"version":3,"sources":["components/Form/Form.module.css","components/App/App.module.css","components/ContactList/ContactList.module.css","components/ContactListItem/ContactListItem.module.css","components/Filter/Filter.module.css","redux/selectors/selectors.js","services/api.js","redux/contacts/contactsActions.js","components/Form/Form.jsx","redux/contacts/contactsOperations.js","components/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.jsx","redux/filter/filterConstants.js","redux/filter/filterActions.js","components/Filter/Filter.jsx","components/App/App.js","redux/contacts/contactsReducers.js","redux/filter/filterReducer.js","redux/error/errorReducers.js","redux/loader/loaderReducer.js","redux/rootReducer.js","redux/store.js","index.js"],"names":["module","exports","contactsSelector","state","contacts","filterSelector","filter","isErrorSelector","isError","isLoadingSelector","isLoading","filteredContactsSelector","createSelector","name","toLowerCase","includes","trim","getContactsApi","a","axios","defaults","baseURL","get","data","addContactsApi","contactForApi","post","removeContactsApi","id","delete","getContactsRequest","createAction","getContactsSuccess","getContactsError","addContactRequest","addContactSuccess","addContactError","removeContactRequest","removeContactSuccess","removeContactError","Form","useSelector","dispatch","useDispatch","useState","setName","number","setNumber","handleChange","target","value","onSubmit","e","contact","preventDefault","some","alert","then","catch","err","message","className","s","form","label","onChange","type","pattern","title","required","button","ContactListItem","item","onClick","removeContact","ContactList","markup","map","list","CHANGE_Filter","changeFilter","Filter","input","App","useEffect","contactsReducer","createReducer","_","payload","filterReducer","errorReducer","loaderReducer","action","reducer","combineReducers","store","configureStore","middleware","getDefaultMiddleware","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.296ad42c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__fv0Fq\",\"label\":\"Form_label__2BhDy\",\"button\":\"Form_button__391YG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"App_title__3ARbL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__1vAv4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactListItem_item__1yWfe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__3JAQN\"};","import { createSelector } from \"@reduxjs/toolkit\";\r\n\r\nexport const contactsSelector = (state) => state.contacts;\r\nexport const filterSelector = (state) => state.filter;\r\nexport const isErrorSelector = (state) => state.isError;\r\nexport const isLoadingSelector = (state) => state.isLoading;\r\n\r\nexport const filteredContactsSelector = createSelector(\r\n  [contactsSelector, filterSelector],\r\n  (contacts, filter) => {\r\n    return contacts.filter(({ name }) => {\r\n      return name.toLowerCase().includes(filter.trim().toLowerCase());\r\n    });\r\n  }\r\n);\r\n","import axios from \"axios\";\r\n\r\nexport const getContactsApi = async () => {\r\n  try {\r\n    axios.defaults.baseURL = \"http://localhost:4040/\";\r\n    const { data } = await axios.get(\"/contacts\");\r\n    return data;\r\n  } catch (err) {\r\n    throw err;\r\n  }\r\n};\r\n\r\nexport const addContactsApi = async (contactForApi) => {\r\n  try {\r\n    axios.defaults.baseURL = \"http://localhost:4040/\";\r\n    const { data } = await axios.post(\"/contacts\", { ...contactForApi });\r\n\r\n    return data;\r\n  } catch (err) {\r\n    throw err;\r\n  }\r\n};\r\n\r\nexport const removeContactsApi = async (id) => {\r\n  try {\r\n    axios.defaults.baseURL = \"http://localhost:4040/\";\r\n    const response = await axios.delete(\"/contacts/\" + id);\r\n    return id;\r\n  } catch (err) {\r\n    throw err;\r\n  }\r\n};\r\n","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nexport const getContactsRequest = createAction(\"Contacts/getContactssRequest\");\r\nexport const getContactsSuccess = createAction(\"Contacts/getContactssSuccess\");\r\nexport const getContactsError = createAction(\"Contacts/getContactssError\");\r\n\r\nexport const addContactRequest = createAction(\"Contacts/addContactsRequest\");\r\nexport const addContactSuccess = createAction(\"Contacts/addContactsSuccess\");\r\nexport const addContactError = createAction(\"Contacts/addContactsError\");\r\n\r\nexport const removeContactRequest = createAction(\r\n  \"Contacts/removeContactsRequest\"\r\n);\r\nexport const removeContactSuccess = createAction(\r\n  \"Contacts/removeContactsSuccess\"\r\n);\r\nexport const removeContactError = createAction(\"Contacts/removeContactsError\");\r\n","import s from \"./Form.module.css\";\r\n\r\nimport { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport { contactsSelector } from \"../../redux/selectors/selectors\";\r\nimport { addContact } from \"../../redux/contacts/contactsOperations\";\r\n\r\nconst Form = () => {\r\n  const contacts = useSelector(contactsSelector);\r\n  const dispatch = useDispatch();\r\n  const [name, setName] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n\r\n  const handleChange = ({ target: { name, value } }) => {\r\n    switch (name) {\r\n      case \"name\":\r\n        setName(value);\r\n        break;\r\n      case \"number\":\r\n        setNumber(value);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const cbOnSubmit = (e) => {\r\n    e.preventDefault();\r\n    contacts.some(\r\n      ({ name: contactName }) =>\r\n        contactName.toLowerCase() === name.toLowerCase()\r\n    )\r\n      ? alert(`${name} is already in contacts`)\r\n      : dispatch(addContact({ name, number }));\r\n    setName(\"\");\r\n    setNumber(\"\");\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={cbOnSubmit} className={s.form}>\r\n      <label className={s.label}>\r\n        Name\r\n        <input\r\n          onChange={handleChange}\r\n          value={name}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n        />\r\n      </label>\r\n      <label className={s.label}>\r\n        Number\r\n        <input\r\n          onChange={handleChange}\r\n          value={number}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n        />\r\n      </label>\r\n      <button className={s.button} type=\"submit\">\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import {\r\n  getContactsApi,\r\n  addContactsApi,\r\n  removeContactsApi,\r\n} from \"../../services/api\";\r\nimport {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  getContactsRequest,\r\n  getContactsSuccess,\r\n  getContactsError,\r\n  removeContactRequest,\r\n  removeContactSuccess,\r\n  removeContactError,\r\n} from \"./contactsActions\";\r\n\r\nexport const getContacts = () => (dispatch) => {\r\n  dispatch(getContactsRequest());\r\n\r\n  getContactsApi()\r\n    .then((contacts) => {\r\n      return dispatch(getContactsSuccess(contacts));\r\n    })\r\n    .catch((err) => dispatch(getContactsError(err.message)));\r\n};\r\n\r\nexport const addContact = (contact) => (dispatch) => {\r\n  dispatch(addContactRequest());\r\n\r\n  addContactsApi(contact)\r\n    .then((contact) => dispatch(addContactSuccess(contact)))\r\n    .catch((err) => dispatch(addContactError(err.message)));\r\n};\r\n\r\nexport const removeContact = (id) => (dispatch) => {\r\n  dispatch(removeContactRequest());\r\n\r\n  removeContactsApi(id)\r\n    .then((id) => dispatch(removeContactSuccess(id)))\r\n    .catch((err) => dispatch(removeContactError(err.message)));\r\n};\r\n","import s from \"./ContactListItem.module.css\";\r\n\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { removeContact } from \"../../redux/contacts/contactsOperations\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst ContactListItem = ({ item: { name, number, id } }) => {\r\n  const dispatch = useDispatch();\r\n  const cbOnRemove = () => {\r\n    dispatch(removeContact(id));\r\n  };\r\n  return (\r\n    <li className={s.item}>\r\n      <span>{name}</span>\r\n      <span>{number}</span>\r\n      <button type=\"button\" onClick={cbOnRemove}>\r\n        Remove\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nContactListItem.propTypes = {\r\n  item: PropTypes.shape({\r\n    name: PropTypes.string.isRequired,\r\n    number: PropTypes.string.isRequired,\r\n    id: PropTypes.string.isRequired,\r\n  }).isRequired,\r\n};\r\n\r\nexport default ContactListItem;\r\n","import s from \"./ContactList.module.css\";\r\n\r\nimport ContactListItem from \"../ContactListItem\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { filteredContactsSelector } from \"../../redux/selectors\";\r\n\r\nconst ContactList = () => {\r\n  const filteredContacts = useSelector((state) =>\r\n    filteredContactsSelector(state)\r\n  );\r\n  const markup = filteredContacts.map((item) => {\r\n    return <ContactListItem key={item.id} item={item} />;\r\n  });\r\n\r\n  return <ul className={s.list}>{markup}</ul>;\r\n};\r\n\r\nexport default ContactList;\r\n","export const CHANGE_Filter = \"filter/changeFilter\";\r\n","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nimport { CHANGE_Filter } from \"./filterConstants\";\r\n\r\nexport const changeFilter = createAction(CHANGE_Filter);\r\n","import s from \"./Filter.module.css\";\r\nimport { changeFilter } from \"../../redux/filter/filterActions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { filterSelector } from \"../../redux/selectors\";\r\n\r\nconst Filter = () => {\r\n  const dispatch = useDispatch();\r\n  const filter = useSelector((state) => filterSelector(state));\r\n  const handleFilter = ({ target: { value } }) => {\r\n    dispatch(changeFilter(value));\r\n  };\r\n  return (\r\n    <div className={s.input}>\r\n      <p>Find contacts by name</p>\r\n      <input\r\n        type=\"text\"\r\n        name=\"filterWord\"\r\n        value={filter}\r\n        onChange={handleFilter}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import s from \"./App.module.css\";\r\n\r\nimport Form from \"../Form\";\r\nimport ContactList from \"../ContactList\";\r\nimport Filter from \"../Filter\";\r\nimport { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getContacts } from \"../../redux/contacts/contactsOperations\";\r\nimport { isErrorSelector, isLoadingSelector } from \"../../redux/selectors\";\r\n\r\nconst App = () => {\r\n  const dispatch = useDispatch();\r\n  const isLoading = useSelector(isLoadingSelector);\r\n  const isError = useSelector(isErrorSelector);\r\n\r\n  useEffect(() => {\r\n    dispatch(getContacts());\r\n  }, []);\r\n  return (\r\n    <div className=\"App\">\r\n      <h1 className={s.title}>Phonebook</h1>\r\n      <Form />\r\n      <h2 className={s.title}>Contacts</h2>\r\n      <Filter />\r\n\r\n      {!isError ? <ContactList /> : <p>{isError}</p>}\r\n      {isLoading && <p>Loading...</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { createReducer } from \"@reduxjs/toolkit\";\r\n\r\nimport {\r\n  getContactsSuccess,\r\n  addContactSuccess,\r\n  removeContactSuccess,\r\n} from \"./contactsActions\";\r\n\r\nexport const contactsReducer = createReducer([], {\r\n  [getContactsSuccess]: (_, { payload }) => {\r\n    return payload;\r\n  },\r\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\r\n  [removeContactSuccess]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nexport default contactsReducer;\r\n","import { createReducer } from \"@reduxjs/toolkit\";\r\n\r\nimport { CHANGE_Filter } from \"./filterConstants\";\r\n\r\n// ---------Pure redux-----------\r\n// export const filterReducer = (state = \"\", { type, payload }) => {\r\n//   switch (type) {\r\n//     case CHANGE_Filter:\r\n//       return payload;\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n// ---------Pure redux-----------\r\n\r\nexport const filterReducer = createReducer(\"\", {\r\n  [CHANGE_Filter]: (state, { payload }) => payload,\r\n});\r\n","import { createReducer } from \"@reduxjs/toolkit\";\r\nimport {\r\n  addContactError,\r\n  getContactsError,\r\n  removeContactError,\r\n  addContactSuccess,\r\n  getContactsSuccess,\r\n  removeContactSuccess,\r\n} from \"../contacts/contactsActions\";\r\n\r\nconst errorReducer = createReducer(null, {\r\n  [getContactsError]: (_, { payload }) => payload,\r\n  [getContactsSuccess]: (_, { payload }) => \"\",\r\n  [addContactError]: (_, { payload }) => payload,\r\n  [addContactSuccess]: (_, { payload }) => \"\",\r\n  [removeContactError]: (_, { payload }) => payload,\r\n  [removeContactSuccess]: (_, { payload }) => \"\",\r\n});\r\nexport default errorReducer;\r\n","import { createReducer } from \"@reduxjs/toolkit\";\r\nimport {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  getContactsRequest,\r\n  getContactsSuccess,\r\n  getContactsError,\r\n  removeContactRequest,\r\n  removeContactSuccess,\r\n  removeContactError,\r\n} from \"../contacts/contactsActions\";\r\n\r\nconst loaderReducer = createReducer(false, {\r\n  [getContactsRequest]: (_, action) => true,\r\n  [getContactsSuccess]: (_, action) => false,\r\n  [getContactsError]: (_, action) => false,\r\n  [addContactRequest]: (_, action) => true,\r\n  [addContactSuccess]: (_, action) => false,\r\n  [addContactError]: (_, action) => false,\r\n  [removeContactRequest]: (_, action) => true,\r\n  [removeContactSuccess]: (_, action) => false,\r\n  [removeContactError]: (_, action) => false,\r\n});\r\n\r\nexport default loaderReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport { contactsReducer } from \"./contacts/contactsReducers\";\r\nimport { filterReducer } from \"./filter/filterReducer\";\r\nimport errorReducer from \"./error/errorReducers\";\r\nimport loaderReducer from \"./loader/loaderReducer\";\r\n\r\nconst reducer = combineReducers({\r\n  contacts: contactsReducer,\r\n  filter: filterReducer,\r\n  isError: errorReducer,\r\n  isLoading: loaderReducer,\r\n});\r\n\r\nexport default reducer;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\n\r\nimport reducer from \"./rootReducer\";\r\n\r\nexport const store = configureStore({\r\n  reducer,\r\n  middleware: (getDefaultMiddleware) => getDefaultMiddleware({}),\r\n  devTools: process.env.NODE_ENV !== \"production\",\r\n});\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport \"./index.css\";\r\nimport App from \"./components/App/App\";\r\nimport { Provider } from \"react-redux\";\r\nimport { store } from \"./redux/store\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}